---

- name: Load AWS vars
  ansible.builtin.include_vars: aws.yml
  when: ansible_system_vendor == 'Amazon EC2'

- name: Set platform/version specific variables
  ansible.builtin.include_vars: "{{ rolename_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml"
  vars:
    rolename_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: rolename_vars_file is file

- name: Load LDAP vars
  ansible.builtin.include_vars: ldap.yml
  tags:
    - molecule-notest

- name: Create and Mount /opt
  ansible.builtin.include_tasks: create_and_mount_disk.yml
  when: ansible_mounts | selectattr('mount', 'equalto', '/opt') | list | length == 0 # Skip if /opt mount already exists
  tags:
    - molecule-notest

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Install elasticsearch
  ansible.builtin.include_tasks: install.yml
  when: '"elasticsearch.service" not in ansible_facts.services'

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Install OpenJDK
  ansible.builtin.include_tasks: install_openjdk.yml
  when: openjdk_package_name not in ansible_facts.packages

- name: Copy TLS Certs
  ansible.builtin.include_tasks: copy_tls_certs.yml

# Force CA Trust Store update now
- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Check port 9200
  ansible.builtin.wait_for:
    port: 9200
    timeout: 5
  register: port_check
  ignore_errors: true

- name: Configure Elasticsearch
  ansible.builtin.include_tasks: configure.yml
  when: port_check is failed

- name: Create CNAME record for ingest NLB
  community.windows.win_dns_record:
    name: "esingest"
    type: "CNAME"
    value: "{{ ingest_nlb_hostname }}"
    zone: "{{ ansible_domain }}"
  delegate_to: dc1
  vars:
    ansible_user: "svc_ansible_da"
    ansible_password: "{{ hostvars['esingest1']['svc_ansible_da_password'] }}"
  run_once: true
  tags:
    - molecule-notest
