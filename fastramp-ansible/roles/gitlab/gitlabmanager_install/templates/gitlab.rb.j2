## GitLab URL
external_url 'https://gitlab1.{{ ansible_domain }}'

### Logrotate
logging['logrotate_frequency'] = "daily" # rotate logs daily
logging['logrotate_maxsize'] = nil # logs will be rotated when they grow bigger than size specified for `maxsize`, even before the specified time interval (daily, weekly, monthly, or yearly)
logging['logrotate_size'] = nil # do not rotate by size by default
logging['logrotate_rotate'] = 30 # keep 30 rotated logs
logging['logrotate_compress'] = "compress" # see 'man logrotate'
logging['logrotate_method'] = "copytruncate" # see 'man logrotate'
logging['logrotate_postrotate'] = nil # no postrotate command by default
logging['logrotate_dateformat'] = nil # use date extensions for rotated files rather than numbers e.g. a value of "-%Y-%m-%d" would give rotated files like production.log-2016-03-09.gz

### Monitoring settings
###! IP whitelist controlling access to monitoring endpoints
gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']

### LDAP Settings
gitlab_rails['ldap_enabled'] = '{{ gitlab_ldap_enabled }}'
gitlab_rails['prevent_ldap_sign_in'] = false
###! **remember to close this block with 'EOS' below**
gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
  main: # 'main' is the GitLab 'provider ID' of this LDAP server
    label: 'LDAP'
    host: "dc1.{{ ansible_domain }}"
    port: '{{ gitlab_ldap_port }}'
    uid: '{{ gitlab_ldap_uid }}'
    bind_dn: '{{ gitlab_ldap_bind_dn }}'
    password: '{{ gitlab_ldap_bind_passwd }}'
    encryption: '{{ gitlab_ldap_method }}' # "start_tls" or "simple_tls" or "plain"
    verify_certificates: {{ gitlab_ldap_verify_certificates }}
    tls_options:
      ca_file: '{{ gitlab_ldap_cert }}'
      ssl_version: '{{ gitlab_ldap_ssl_version }}'
      ciphers: '{{ gitlab_ldap_ciphers }}'
    smartcard_auth: false
    active_directory: {{ gitlab_ldap_active_directory }}
    allow_username_or_email_login: false
    lowercase_usernames: false
    block_auto_created_users: false
    base: '{{ gitlab_ldap_base }}'
    group_base: '{{ gitlab_ldap_group_base }}'
    admin_group: '{{ gitlab_ldap_admin_group }}'
  EOS

#### Change the initial default admin password and shared runner registration tokens.
####! **Only applicable on initial setup, changing these settings after database
####!   is created and seeded won't yield any change.**
gitlab_rails['initial_root_password'] = '{{ initial_root_password }}'

### GitLab database settings
###! Docs: https://docs.gitlab.com/omnibus/settings/database.html
###! **Only needed if you use an external database.**
gitlab_rails['db_sslrootcert'] = '{{ gitlab_db_rootcert }}'
gitlab_rails['db_sslmode'] = 'verify-full'
gitlab_rails['db_adapter'] = '{{ gitlab_db_adapter }}'
gitlab_rails['db_encoding'] = '{{ gitlab_db_encoding }}'
gitlab_rails['db_database'] = 'gitlabhq_production'
gitlab_rails['db_username'] = '{{ gitlab_db_username }}'
gitlab_rails['db_password'] = '{{ db_password }}'
gitlab_rails['db_host'] = '{{ db_endpoint }}'

postgresql['enable'] = false

################################################################################
## GitLab NGINX
##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html
################################################################################

nginx['redirect_http_to_https'] = true
nginx['ssl_certificate'] = "{{ gitlab_ssl_certificate }}"
nginx['ssl_certificate_key'] = "{{ gitlab_ssl_certificate_key }}"

### Backup Settings

 gitlab_rails['manage_backup_path'] = true
 gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"

###! Docs: https://docs.gitlab.com/ee/raketasks/backup_restore.html#backup-archive-permissions
 gitlab_rails['backup_archive_permissions'] = 0644

 gitlab_rails['backup_pg_schema'] = 'public'

###! The duration in seconds to keep backups before they are allowed to be deleted
 gitlab_rails['backup_keep_time'] = 604800

 gitlab_rails['backup_upload_connection'] = {
   'provider' => 'AWS',
   'region' => "{{ aws_region }}",
#   'aws_access_key_id' => 'AKIAKIAKI',
#   'aws_secret_access_key' => 'secret123',
   # # If IAM profile use is enabled, remove aws_access_key_id and aws_secret_access_key
   'use_iam_profile' => true
 }
 gitlab_rails['backup_upload_storage_options'] = {
  'server_side_encryption' => 'aws:kms',
  'server_side_encryption_kms_key_id' => '{{ s3_kms_key_arn }}'
}
 gitlab_rails['backup_upload_remote_directory'] = "{{ aws_s3_backup_bucket_name }}/gitlab-backup"
 gitlab_rails['backup_multipart_chunk_size'] = 104857600

### Node exporter
 node_exporter['enable'] = false