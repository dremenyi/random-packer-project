- name: Create Read-Only account for LDAPS use
  microsoft.ad.user:
    name: svc_ansibletwr
    firstname: Service
    surname: AnsibleTower
    password_never_expires: true
    path: "OU=Service Accounts,OU=Management,OU=All Users,{{ dom_disname }}"
    password: "{{ svc_ansibletwr_password }}"
    update_password: when_changed
  delegate_to: dc1
  vars:
    ansible_user: "svc_ansible_da"
    ansible_password: "{{ hostvars['ansible1']['svc_ansible_da_password'] }}"

- name: Create AnsibleAdmins AD Group
  microsoft.ad.group:
    name: AnsibleAdmins
    scope: global
    path: "OU=Security Groups,OU=Management,OU=All Users,{{ dom_disname }}"
  delegate_to: dc1
  vars:
    ansible_user: "svc_ansible_da"
    ansible_password: "{{ hostvars['ansible1']['svc_ansible_da_password'] }}"

- name: Set the LDAP Auth Bind Password
  ansible.tower.tower_settings:
    name: "AUTH_LDAP_BIND_PASSWORD"
    value: "{{ svc_ansibletwr_password }}"
    tower_host: "{{ tower_api_url }}"
    tower_oauthtoken: "{{ tower_token }}"
  no_log: true

- name: Set all the LDAP Auth Bind Params
  ansible.tower.tower_settings:
    settings:
      AUTH_LDAP_SERVER_URI: "ldaps://dc1.{{ ansible_domain }}:636,ldaps://dc2.{{ ansible_domain }}:636"
      AUTH_LDAP_BIND_DN: "CN=svc_ansibletwr,OU=Service Accounts,OU=Management,OU=All Users,{{ dom_disname }}"
      AUTH_LDAP_START_TLS: false
      AUTH_LDAP_GROUP_SEARCH:
        - "{{ ldap_group_search_pattern }}"
        - "SCOPE_BASE"
        - "(objectClass=group)"
      AUTH_LDAP_GROUP_TYPE: "MemberDNGroupType"
      AUTH_LDAP_GROUP_TYPE_PARAMS:
        name_attr: "cn"
        member_attr: "member"
      AUTH_LDAP_REQUIRE_GROUP: "{{ ldap_required_group_pattern }}"
      AUTH_LDAP_USER_FLAGS_BY_GROUP:
        is_superuser: "{{ ldap_super_user_group_pattern }}"
      AUTH_LDAP_USER_SEARCH:
        - "{{ ldap_user_search_pattern }}"
        - "SCOPE_ONELEVEL"
        - "(sAMAccountName=%(user)s)"
      AUTH_LDAP_USER_ATTR_MAP:
        email: "mail"
        first_name: "givenName"
        last_name: "sn"
    tower_host: "{{ tower_api_url }}"
    tower_oauthtoken: "{{ tower_token }}"
