- name: reload systemctl daemon
  ansible.builtin.systemd:
    daemon_reload: true
  become: true

- name: Pause
  ansible.builtin.pause:
    seconds: 120

- name: stop splunk
  ansible.builtin.service:
    name: Splunkd
    state: stopped
  become: true

- name: start splunk
  ansible.builtin.service:
    name: Splunkd
    state: started
  become: true

- name: restart splunk
  ansible.builtin.service:
    name: Splunkd
    state: restarted
  become: true

- name: wait for splunkd
  ansible.builtin.wait_for:
    port: 8089
    state: started
    delay: 5

- name: apply indexer cluster bundle
  ansible.builtin.command: "/opt/splunk/bin/splunk apply cluster-bundle --answer-yes --skip-validation -auth admin:{{ user_password }}"
  become: true
  become_user: splunk
  register: apply_cluster_bundle_result
  changed_when: apply_cluster_bundle_result.rc == 0
  failed_when: apply_cluster_bundle_result.rc != 0
  retries: 3
  delay: 60
  no_log: true
  when: "'clustermanager' in group_names"

- name: reload deployment server
  ansible.builtin.command: "/opt/splunk/bin/splunk reload deploy-server -auth admin:{{ user_password }}"
  become: true
  become_user: splunk
  no_log: false
  register: reload_deployment_server_result
  when: "'deploymentserver' in group_names"
  changed_when: reload_deployment_server_result.rc == 0
  failed_when:
    - reload_deployment_server_result.rc != 0
    - reload_deployment_server_result.stderr != 'Current license does not allow the requested action'
