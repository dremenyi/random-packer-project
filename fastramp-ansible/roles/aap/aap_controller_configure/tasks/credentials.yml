- name: Add Linux SSH Credential
  awx.awx.credential:
    name: Linux SSH
    description: Linux SSH Credential
    organization: "{{ aap_org_name }}"
    credential_type: Machine
    state: present
    inputs:
      become_method: sudo
      become_username: root
      become_password: "{{ svc_ansible_pass }}"
      username: "svc_ansible@{{ ansible_domain | upper }}"
      password: "{{ svc_ansible_pass }}"
    controller_host: "{{ controller_api_url }}"
    controller_oauthtoken: "{{ aap_controller_admin_api_token }}"
    validate_certs: true

- name: Add Windows RM Credential
  awx.awx.credential:
    name: Windows WinRM
    description: Windows RM Credential
    organization: "{{ aap_org_name }}"
    credential_type: Machine
    state: present
    inputs:
      username: "svc_ansible@{{ ansible_domain | upper }}"
      password: "{{ svc_ansible_pass }}"
    controller_host: "{{ controller_api_url }}"
    controller_oauthtoken: "{{ aap_controller_admin_api_token }}"
    validate_certs: true

- name: Add CodeCommit Credential
  awx.awx.credential:
    name: CodeCommit
    description: CodeCommit Credential
    organization: "{{ aap_org_name }}"
    credential_type: Source Control
    state: present
    inputs:
      username: "{{ codecommit_user_name }}"
      password: "{{ codecommit_user_password }}"
    controller_host: "{{ controller_api_url }}"
    controller_oauthtoken: "{{ aap_controller_admin_api_token }}"
    validate_certs: true

- name: Add Ansible Galaxy
  awx.awx.credential:
    name: Ansible Galaxy
    description: Ansible Galaxy Credential
    organization: "{{ aap_org_name }}"
    credential_type: Ansible Galaxy/Automation Hub API Token
    state: present
    inputs:
      url: https://galaxy.ansible.com
    controller_host: "{{ controller_api_url }}"
    controller_oauthtoken: "{{ aap_controller_admin_api_token }}"
    validate_certs: true

# Note: Avoiding circular dependency.  Credentials require an Organization, but galaxy credential cannot be specified if the credential doesn't exist.
# So I'm 1) creating an organization without Galaxy creds, 2) creating Credentials, 3) creating the org again with galaxy creds.
- name: Create controller organization with Galaxy creds
  awx.awx.organization:
    name: "{{ aap_org_name }}"
    description: "Production Organization"
    state: present
    controller_host: "{{ controller_api_url }}"
    controller_oauthtoken: "{{ aap_controller_admin_api_token }}"
    galaxy_credentials:
      - Ansible Galaxy
    validate_certs: true
